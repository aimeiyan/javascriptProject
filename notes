1、压缩代码能节省一部分带宽，压缩工具本身带有逻辑优化；js和图片不完全一样，<script>标签中js下载一般是阻塞操作的，压缩了减少响应时间；合并是为了减少http请求，这个很重要；
便于版本更新，上线后不让别人看懂代码；

2、http://www.it28.com/wangyezhizuo/html5/2014-08-02/103156.html
localStorage.setItem("a.js","a.js的文件内容");
localStorage.setItem("b.js","b.js的文件内容");
localStorage.setItem("c.js","c.js的文件内容");

这样玩虽然有5M的限制, 就不用阻塞了
很多移动端网页有这么缓存js的策略

3、最新的电子书提供下载网址：
http://www.salttiger.com/

4、月影js视频地址
http://i.youku.com/u/UMzAzMTEzNTUyOA==

5、《PPK谈JavaScript》

6、移动Web手册（双色）
http://quirksmode.org/mobilewebhandbook/chapter1.html
http://quirksmode.org/

7、http://fis.baidu.com/index.html
FIS是专为解决前端开发中自动化工具、性能优化、模块化框架、开发规范、代码部署、开发流程等问题的工具框架。

8、制作蒙板，漂浮于内容上面，区域等于其父亲的区域

.mask {
            position: absolute;
            left: 0;
            bottom: 0;
            top: 0;
            right: 0;
            background: rgba(0,0,0,0.6);
            color:#ff6600;
        }


    等效于


.mask {
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0;
            left: 0;
            background: rgba(0,0,0,0.6);
            color:#ff6600;
        }

9、DOM事件流，同时支持两种事件模型：捕获型事件和冒泡型事件。
支持W3C标准的浏览器在添加事件时用addEventListener(event,fn,useCapture)方法，
基中第3个参数useCapture是一个Boolean值，用来设置事件是在事件捕获时执行，还是事
件冒泡时执行。而不兼容W3C的浏览器(IE)用attachEvent()方法，此方法没有相关设置，
不过IE的事件模型默认是在事件冒泡时执行的，也就是在useCapture等于false的时候执行，
所以把在处理事件时把useCapture设置为false是比较安全，也实现兼容浏览器的效果。

事件捕获阶段：事件从最上一级标签开始往下查找，直到捕获到事件目标(target)。
事件冒泡阶段：事件从事件目标(target)开始，往上冒泡直到页面的最上一级标签。

两种模型
以前，Netscape和Microsoft是不同的实现方式。
Netscape中，div先触发，这就叫做事件捕获。
Microsoft中，p先触发，这就叫做事件冒泡。
两种事件处理顺序刚好相反。IE只支持事件冒泡，Mozilla, Opera 7 和 Konqueror两种都支持，旧版本的Opera's 和 iCab两种都不支持 。

事件捕获
当你使用事件捕获时，父级元素先触发，子级元素后触发，即div先触发，p后触发。

事件冒泡
当你使用事件冒泡时，子级元素先触发，父级元素后触发，即p先触发，div后触发。

W3C模型
W3C模型是将两者进行中和，在W3C模型中，任何事件发生时，先从顶层开始进行事件捕获，直到事件触发到达了事件源元素。然后，再从事件源往上进行事件冒泡，直到到达document。
程序员可以自己选择绑定事件时采用事件捕获还是事件冒泡，方法就是绑定事件时通过addEventListener函数，它有三个参数，第三个参数若是true，则表示采用事件捕获，若是false，则表示采用事件冒泡。
ele.addEventListener('click',doSomething2,true)
true=捕获
false=冒泡
传统绑定事件方式
在一个支持W3C DOM的浏览器中，像这样一般的绑定事件方式，是采用的事件冒泡方式。
ele.onclick = doSomething2
IE浏览器
如上面所说，IE只支持事件冒泡，不支持事件捕获，它也不支持addEventListener函数，不会用第三个参数来表示是冒泡还是捕获，它提供了另一个函数attachEvent。
ele.attachEvent("onclick", doSomething2);
附：事件冒泡（的过程）：事件从发生的目标（event.srcElement||event.target）开始，沿着文档逐层向上冒泡，到document为止。
事件的传播是可以阻止的：
• 在W3c中，使用stopPropagation（）方法
• 在IE下设置cancelBubble = true；
在捕获的过程中stopPropagation（）；后，后面的冒泡过程也不会发生了~
3.阻止事件的默认行为，例如click <a>后的跳转~
• 在W3c中，使用preventDefault（）方法；
• 在IE下设置window.event.returnValue = false;
4.不是所有的事件都能冒泡，例如：blur、focus、load、unload